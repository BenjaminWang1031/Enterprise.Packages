//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets027DDFCBC5C8FFBB402CABED9980807CE3E462DCF8DC41F9DB08C2DDE02A483E))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets027DDFCBC5C8FFBB402CABED9980807CE3E462DCF8DC41F9DB08C2DDE02A483E : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets027DDFCBC5C8FFBB402CABED9980807CE3E462DCF8DC41F9DB08C2DDE02A483E()
        {
            this.EdmEntityContainerName = "EFLocalTest";
            this.StoreEntityContainerName = "EF5TestModelStoreContainer";
            this.HashOverMappingClosure = "850b6a92e618399d0db398519fd9b6ab1214a263dc784486e6f57312fbee4f12";
            this.HashOverAllExtentViews = "c1009e77f197bf4871547c3c042394c8a12903de6fe1dcb276f7bed28ce4a54e";
            this.ViewCount = 80;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.FLEXOrgs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.FLEXOrgs", @"
    SELECT VALUE -- Constructing FLEXOrgs
        [EF5TestModel.Store.FLEXOrgs](T1.[FLEXOrgs.ORGANIZATION_CODE])
    FROM (
        SELECT 
            T.ORGANIZATION_CODE AS [FLEXOrgs.ORGANIZATION_CODE], 
            True AS _from0
        FROM EFLocalTest.FLEXOrgs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.FLEXOrgs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.FLEXOrgs", @"
    SELECT VALUE -- Constructing FLEXOrgs
        [EF5TestModel.FLEXOrg](T1.[FLEXOrg.ORGANIZATION_CODE])
    FROM (
        SELECT 
            T.ORGANIZATION_CODE AS [FLEXOrg.ORGANIZATION_CODE], 
            True AS _from0
        FROM EF5TestModelStoreContainer.FLEXOrgs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.OrderTypeTranslations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.OrderTypeTranslations", @"
    SELECT VALUE -- Constructing OrderTypeTranslations
        [EF5TestModel.Store.OrderTypeTranslations](T1.[OrderTypeTranslations.Organization_ID], T1.[OrderTypeTranslations.Transaction_Type_Id], T1.OrderTypeTranslations_LBPValue)
    FROM (
        SELECT 
            T.Organization_ID AS [OrderTypeTranslations.Organization_ID], 
            T.Transaction_Type_Id AS [OrderTypeTranslations.Transaction_Type_Id], 
            T.LBPValue AS OrderTypeTranslations_LBPValue, 
            True AS _from0
        FROM EFLocalTest.OrderTypeTranslations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.OrderTypeTranslations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.OrderTypeTranslations", @"
    SELECT VALUE -- Constructing OrderTypeTranslations
        [EF5TestModel.OrderTypeTranslation](T1.[OrderTypeTranslation.Organization_ID], T1.[OrderTypeTranslation.Transaction_Type_Id], T1.OrderTypeTranslation_LBPValue)
    FROM (
        SELECT 
            T.Organization_ID AS [OrderTypeTranslation.Organization_ID], 
            T.Transaction_Type_Id AS [OrderTypeTranslation.Transaction_Type_Id], 
            T.LBPValue AS OrderTypeTranslation_LBPValue, 
            True AS _from0
        FROM EF5TestModelStoreContainer.OrderTypeTranslations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Access
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Access", @"
    SELECT VALUE -- Constructing T_F_Access
        [EF5TestModel.Store.T_F_Access](T1.[T_F_Access.ID], T1.[T_F_Access.Name], T1.[T_F_Access.Num], T1.[T_F_Access.Mask], T1.[T_F_Access.OrderID], T1.[T_F_Access.Description], T1.[T_F_Access.ParentID], T1.[T_F_Access.LevelNum], T1.[T_F_Access.IsDetail], T1.[T_F_Access.IsGroup], T1.[T_F_Access.Message], T1.[T_F_Access.Forbidden])
    FROM (
        SELECT 
            T.ID AS [T_F_Access.ID], 
            T.Name AS [T_F_Access.Name], 
            T.Num AS [T_F_Access.Num], 
            T.Mask AS [T_F_Access.Mask], 
            T.OrderID AS [T_F_Access.OrderID], 
            T.Description AS [T_F_Access.Description], 
            T.ParentID AS [T_F_Access.ParentID], 
            T.LevelNum AS [T_F_Access.LevelNum], 
            T.IsDetail AS [T_F_Access.IsDetail], 
            T.IsGroup AS [T_F_Access.IsGroup], 
            T.Message AS [T_F_Access.Message], 
            T.Forbidden AS [T_F_Access.Forbidden], 
            True AS _from0
        FROM EFLocalTest.T_F_Access AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Access
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Access", @"
    SELECT VALUE -- Constructing T_F_Access
        [EF5TestModel.T_F_Access](T1.[T_F_Access.ID], T1.[T_F_Access.Name], T1.[T_F_Access.Num], T1.[T_F_Access.Mask], T1.[T_F_Access.OrderID], T1.[T_F_Access.Description], T1.[T_F_Access.ParentID], T1.[T_F_Access.LevelNum], T1.[T_F_Access.IsDetail], T1.[T_F_Access.IsGroup], T1.[T_F_Access.Message], T1.[T_F_Access.Forbidden])
    FROM (
        SELECT 
            T.ID AS [T_F_Access.ID], 
            T.Name AS [T_F_Access.Name], 
            T.Num AS [T_F_Access.Num], 
            T.Mask AS [T_F_Access.Mask], 
            T.OrderID AS [T_F_Access.OrderID], 
            T.Description AS [T_F_Access.Description], 
            T.ParentID AS [T_F_Access.ParentID], 
            T.LevelNum AS [T_F_Access.LevelNum], 
            T.IsDetail AS [T_F_Access.IsDetail], 
            T.IsGroup AS [T_F_Access.IsGroup], 
            T.Message AS [T_F_Access.Message], 
            T.Forbidden AS [T_F_Access.Forbidden], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Access AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Accessories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Accessories", @"
    SELECT VALUE -- Constructing T_F_Accessories
        [EF5TestModel.Store.T_F_Accessories](T1.[T_F_Accessories.ID], T1.[T_F_Accessories.Logic])
    FROM (
        SELECT 
            T.ID AS [T_F_Accessories.ID], 
            T.Logic AS [T_F_Accessories.Logic], 
            True AS _from0
        FROM EFLocalTest.T_F_Accessories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Accessories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Accessories", @"
    SELECT VALUE -- Constructing T_F_Accessories
        [EF5TestModel.T_F_Accessories](T1.[T_F_Accessories.ID], T1.[T_F_Accessories.Logic])
    FROM (
        SELECT 
            T.ID AS [T_F_Accessories.ID], 
            T.Logic AS [T_F_Accessories.Logic], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Accessories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_AccessoriesContent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_AccessoriesContent", @"
    SELECT VALUE -- Constructing T_F_AccessoriesContent
        [EF5TestModel.Store.T_F_AccessoriesContent](T1.[T_F_AccessoriesContent.ID], T1.[T_F_AccessoriesContent.AccessoriesEntryID], T1.[T_F_AccessoriesContent.BinaryData])
    FROM (
        SELECT 
            T.ID AS [T_F_AccessoriesContent.ID], 
            T.AccessoriesEntryID AS [T_F_AccessoriesContent.AccessoriesEntryID], 
            T.BinaryData AS [T_F_AccessoriesContent.BinaryData], 
            True AS _from0
        FROM EFLocalTest.T_F_AccessoriesContent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_AccessoriesContent
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_AccessoriesContent", @"
    SELECT VALUE -- Constructing T_F_AccessoriesContent
        [EF5TestModel.T_F_AccessoriesContent](T1.[T_F_AccessoriesContent.ID], T1.[T_F_AccessoriesContent.AccessoriesEntryID], T1.[T_F_AccessoriesContent.BinaryData])
    FROM (
        SELECT 
            T.ID AS [T_F_AccessoriesContent.ID], 
            T.AccessoriesEntryID AS [T_F_AccessoriesContent.AccessoriesEntryID], 
            T.BinaryData AS [T_F_AccessoriesContent.BinaryData], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_AccessoriesContent AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_AccessoriesEntry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_AccessoriesEntry", @"
    SELECT VALUE -- Constructing T_F_AccessoriesEntry
        [EF5TestModel.Store.T_F_AccessoriesEntry](T1.[T_F_AccessoriesEntry.ID], T1.[T_F_AccessoriesEntry.AccessoriesID], T1.[T_F_AccessoriesEntry.RecordNum], T1.[T_F_AccessoriesEntry.Exp], T1.[T_F_AccessoriesEntry.FileName], T1.[T_F_AccessoriesEntry.FileSize], T1.[T_F_AccessoriesEntry.SysUserID], T1.[T_F_AccessoriesEntry.UpdateTime], T1.[T_F_AccessoriesEntry.OriginalPath], T1.[T_F_AccessoriesEntry.FileType], T1.[T_F_AccessoriesEntry.SysUserName])
    FROM (
        SELECT 
            T.ID AS [T_F_AccessoriesEntry.ID], 
            T.AccessoriesID AS [T_F_AccessoriesEntry.AccessoriesID], 
            T.RecordNum AS [T_F_AccessoriesEntry.RecordNum], 
            T.Exp AS [T_F_AccessoriesEntry.Exp], 
            T.FileName AS [T_F_AccessoriesEntry.FileName], 
            T.FileSize AS [T_F_AccessoriesEntry.FileSize], 
            T.SysUserID AS [T_F_AccessoriesEntry.SysUserID], 
            T.UpdateTime AS [T_F_AccessoriesEntry.UpdateTime], 
            T.OriginalPath AS [T_F_AccessoriesEntry.OriginalPath], 
            T.FileType AS [T_F_AccessoriesEntry.FileType], 
            T.SysUserName AS [T_F_AccessoriesEntry.SysUserName], 
            True AS _from0
        FROM EFLocalTest.T_F_AccessoriesEntry AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_AccessoriesEntry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_AccessoriesEntry", @"
    SELECT VALUE -- Constructing T_F_AccessoriesEntry
        [EF5TestModel.T_F_AccessoriesEntry](T1.[T_F_AccessoriesEntry.ID], T1.[T_F_AccessoriesEntry.AccessoriesID], T1.[T_F_AccessoriesEntry.RecordNum], T1.[T_F_AccessoriesEntry.Exp], T1.[T_F_AccessoriesEntry.FileName], T1.[T_F_AccessoriesEntry.FileSize], T1.[T_F_AccessoriesEntry.SysUserID], T1.[T_F_AccessoriesEntry.UpdateTime], T1.[T_F_AccessoriesEntry.OriginalPath], T1.[T_F_AccessoriesEntry.FileType], T1.[T_F_AccessoriesEntry.SysUserName])
    FROM (
        SELECT 
            T.ID AS [T_F_AccessoriesEntry.ID], 
            T.AccessoriesID AS [T_F_AccessoriesEntry.AccessoriesID], 
            T.RecordNum AS [T_F_AccessoriesEntry.RecordNum], 
            T.Exp AS [T_F_AccessoriesEntry.Exp], 
            T.FileName AS [T_F_AccessoriesEntry.FileName], 
            T.FileSize AS [T_F_AccessoriesEntry.FileSize], 
            T.SysUserID AS [T_F_AccessoriesEntry.SysUserID], 
            T.UpdateTime AS [T_F_AccessoriesEntry.UpdateTime], 
            T.OriginalPath AS [T_F_AccessoriesEntry.OriginalPath], 
            T.FileType AS [T_F_AccessoriesEntry.FileType], 
            T.SysUserName AS [T_F_AccessoriesEntry.SysUserName], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_AccessoriesEntry AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlow
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlow", @"
    SELECT VALUE -- Constructing T_F_BusinessFlow
        [EF5TestModel.Store.T_F_BusinessFlow](T1.[T_F_BusinessFlow.ID], T1.[T_F_BusinessFlow.Name], T1.[T_F_BusinessFlow.BusinessFlowCatalogID], T1.[T_F_BusinessFlow.ProcessXml], T1.[T_F_BusinessFlow.Released], T1.[T_F_BusinessFlow.Description], T1.[T_F_BusinessFlow.CreateTime], T1.[T_F_BusinessFlow.ReleaseTime])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlow.ID], 
            T.Name AS [T_F_BusinessFlow.Name], 
            T.BusinessFlowCatalogID AS [T_F_BusinessFlow.BusinessFlowCatalogID], 
            T.ProcessXml AS [T_F_BusinessFlow.ProcessXml], 
            T.Released AS [T_F_BusinessFlow.Released], 
            T.Description AS [T_F_BusinessFlow.Description], 
            T.CreateTime AS [T_F_BusinessFlow.CreateTime], 
            T.ReleaseTime AS [T_F_BusinessFlow.ReleaseTime], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlow AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlow
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlow", @"
    SELECT VALUE -- Constructing T_F_BusinessFlow
        [EF5TestModel.T_F_BusinessFlow](T1.[T_F_BusinessFlow.ID], T1.[T_F_BusinessFlow.Name], T1.[T_F_BusinessFlow.BusinessFlowCatalogID], T1.[T_F_BusinessFlow.ProcessXml], T1.[T_F_BusinessFlow.Released], T1.[T_F_BusinessFlow.Description], T1.[T_F_BusinessFlow.CreateTime], T1.[T_F_BusinessFlow.ReleaseTime])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlow.ID], 
            T.Name AS [T_F_BusinessFlow.Name], 
            T.BusinessFlowCatalogID AS [T_F_BusinessFlow.BusinessFlowCatalogID], 
            T.ProcessXml AS [T_F_BusinessFlow.ProcessXml], 
            T.Released AS [T_F_BusinessFlow.Released], 
            T.Description AS [T_F_BusinessFlow.Description], 
            T.CreateTime AS [T_F_BusinessFlow.CreateTime], 
            T.ReleaseTime AS [T_F_BusinessFlow.ReleaseTime], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlow AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowActivity", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowActivity
        [EF5TestModel.Store.T_F_BusinessFlowActivity](T1.[T_F_BusinessFlowActivity.ID], T1.[T_F_BusinessFlowActivity.BusinessFlowID], T1.[T_F_BusinessFlowActivity.QualifiedID], T1.[T_F_BusinessFlowActivity.ActivityOrder], T1.[T_F_BusinessFlowActivity.IfElseOrder], T1.[T_F_BusinessFlowActivity.WhileOrder], T1.[T_F_BusinessFlowActivity.SequenceOrder], T1.[T_F_BusinessFlowActivity.Subject], T1.[T_F_BusinessFlowActivity.Operation], T1.[T_F_BusinessFlowActivity.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowActivity.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowActivity.BusinessFlowID], 
            T.QualifiedID AS [T_F_BusinessFlowActivity.QualifiedID], 
            T.ActivityOrder AS [T_F_BusinessFlowActivity.ActivityOrder], 
            T.IfElseOrder AS [T_F_BusinessFlowActivity.IfElseOrder], 
            T.WhileOrder AS [T_F_BusinessFlowActivity.WhileOrder], 
            T.SequenceOrder AS [T_F_BusinessFlowActivity.SequenceOrder], 
            T.Subject AS [T_F_BusinessFlowActivity.Subject], 
            T.Operation AS [T_F_BusinessFlowActivity.Operation], 
            T.Description AS [T_F_BusinessFlowActivity.Description], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowActivity", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowActivity
        [EF5TestModel.T_F_BusinessFlowActivity](T1.[T_F_BusinessFlowActivity.ID], T1.[T_F_BusinessFlowActivity.BusinessFlowID], T1.[T_F_BusinessFlowActivity.QualifiedID], T1.[T_F_BusinessFlowActivity.ActivityOrder], T1.[T_F_BusinessFlowActivity.IfElseOrder], T1.[T_F_BusinessFlowActivity.WhileOrder], T1.[T_F_BusinessFlowActivity.SequenceOrder], T1.[T_F_BusinessFlowActivity.Subject], T1.[T_F_BusinessFlowActivity.Operation], T1.[T_F_BusinessFlowActivity.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowActivity.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowActivity.BusinessFlowID], 
            T.QualifiedID AS [T_F_BusinessFlowActivity.QualifiedID], 
            T.ActivityOrder AS [T_F_BusinessFlowActivity.ActivityOrder], 
            T.IfElseOrder AS [T_F_BusinessFlowActivity.IfElseOrder], 
            T.WhileOrder AS [T_F_BusinessFlowActivity.WhileOrder], 
            T.SequenceOrder AS [T_F_BusinessFlowActivity.SequenceOrder], 
            T.Subject AS [T_F_BusinessFlowActivity.Subject], 
            T.Operation AS [T_F_BusinessFlowActivity.Operation], 
            T.Description AS [T_F_BusinessFlowActivity.Description], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowActivity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowActivityOutput
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowActivityOutput", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowActivityOutput
        [EF5TestModel.Store.T_F_BusinessFlowActivityOutput](T1.[T_F_BusinessFlowActivityOutput.ID], T1.[T_F_BusinessFlowActivityOutput.BusinessFlowID], T1.[T_F_BusinessFlowActivityOutput.QualifiedID], T1.[T_F_BusinessFlowActivityOutput.VariableID], T1.[T_F_BusinessFlowActivityOutput.EntityProperty], T1.[T_F_BusinessFlowActivityOutput.EntityID])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowActivityOutput.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowActivityOutput.BusinessFlowID], 
            T.QualifiedID AS [T_F_BusinessFlowActivityOutput.QualifiedID], 
            T.VariableID AS [T_F_BusinessFlowActivityOutput.VariableID], 
            T.EntityProperty AS [T_F_BusinessFlowActivityOutput.EntityProperty], 
            T.EntityID AS [T_F_BusinessFlowActivityOutput.EntityID], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowActivityOutput AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowActivityOutput
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowActivityOutput", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowActivityOutput
        [EF5TestModel.T_F_BusinessFlowActivityOutput](T1.[T_F_BusinessFlowActivityOutput.ID], T1.[T_F_BusinessFlowActivityOutput.BusinessFlowID], T1.[T_F_BusinessFlowActivityOutput.QualifiedID], T1.[T_F_BusinessFlowActivityOutput.VariableID], T1.[T_F_BusinessFlowActivityOutput.EntityProperty], T1.[T_F_BusinessFlowActivityOutput.EntityID])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowActivityOutput.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowActivityOutput.BusinessFlowID], 
            T.QualifiedID AS [T_F_BusinessFlowActivityOutput.QualifiedID], 
            T.VariableID AS [T_F_BusinessFlowActivityOutput.VariableID], 
            T.EntityProperty AS [T_F_BusinessFlowActivityOutput.EntityProperty], 
            T.EntityID AS [T_F_BusinessFlowActivityOutput.EntityID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowActivityOutput AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowCatalog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowCatalog", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowCatalog
        [EF5TestModel.Store.T_F_BusinessFlowCatalog](T1.[T_F_BusinessFlowCatalog.ID], T1.[T_F_BusinessFlowCatalog.Name], T1.[T_F_BusinessFlowCatalog.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowCatalog.ID], 
            T.Name AS [T_F_BusinessFlowCatalog.Name], 
            T.Description AS [T_F_BusinessFlowCatalog.Description], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowCatalog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowCatalog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowCatalog", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowCatalog
        [EF5TestModel.T_F_BusinessFlowCatalog](T1.[T_F_BusinessFlowCatalog.ID], T1.[T_F_BusinessFlowCatalog.Name], T1.[T_F_BusinessFlowCatalog.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowCatalog.ID], 
            T.Name AS [T_F_BusinessFlowCatalog.Name], 
            T.Description AS [T_F_BusinessFlowCatalog.Description], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowCatalog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowCondition", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowCondition
        [EF5TestModel.Store.T_F_BusinessFlowCondition](T1.[T_F_BusinessFlowCondition.ID], T1.[T_F_BusinessFlowCondition.BusinessFlowID], T1.[T_F_BusinessFlowCondition.Name], T1.[T_F_BusinessFlowCondition.Condition])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowCondition.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowCondition.BusinessFlowID], 
            T.Name AS [T_F_BusinessFlowCondition.Name], 
            T.Condition AS [T_F_BusinessFlowCondition.Condition], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowCondition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowCondition", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowCondition
        [EF5TestModel.T_F_BusinessFlowCondition](T1.[T_F_BusinessFlowCondition.ID], T1.[T_F_BusinessFlowCondition.BusinessFlowID], T1.[T_F_BusinessFlowCondition.Name], T1.[T_F_BusinessFlowCondition.Condition])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowCondition.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowCondition.BusinessFlowID], 
            T.Name AS [T_F_BusinessFlowCondition.Name], 
            T.Condition AS [T_F_BusinessFlowCondition.Condition], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowCondition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowEntity", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowEntity
        [EF5TestModel.Store.T_F_BusinessFlowEntity](T1.[T_F_BusinessFlowEntity.ID], T1.[T_F_BusinessFlowEntity.BusinessFlowID], T1.[T_F_BusinessFlowEntity.EntityID])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowEntity.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowEntity.BusinessFlowID], 
            T.EntityID AS [T_F_BusinessFlowEntity.EntityID], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowEntity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowEntity", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowEntity
        [EF5TestModel.T_F_BusinessFlowEntity](T1.[T_F_BusinessFlowEntity.ID], T1.[T_F_BusinessFlowEntity.BusinessFlowID], T1.[T_F_BusinessFlowEntity.EntityID])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowEntity.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowEntity.BusinessFlowID], 
            T.EntityID AS [T_F_BusinessFlowEntity.EntityID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowEntity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_BusinessFlowVariable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_BusinessFlowVariable", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowVariable
        [EF5TestModel.Store.T_F_BusinessFlowVariable](T1.[T_F_BusinessFlowVariable.ID], T1.[T_F_BusinessFlowVariable.BusinessFlowID], T1.[T_F_BusinessFlowVariable.Name], T1.[T_F_BusinessFlowVariable.InitData], T1.[T_F_BusinessFlowVariable.Type])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowVariable.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowVariable.BusinessFlowID], 
            T.Name AS [T_F_BusinessFlowVariable.Name], 
            T.InitData AS [T_F_BusinessFlowVariable.InitData], 
            T.Type AS [T_F_BusinessFlowVariable.Type], 
            True AS _from0
        FROM EFLocalTest.T_F_BusinessFlowVariable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_BusinessFlowVariable
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_BusinessFlowVariable", @"
    SELECT VALUE -- Constructing T_F_BusinessFlowVariable
        [EF5TestModel.T_F_BusinessFlowVariable](T1.[T_F_BusinessFlowVariable.ID], T1.[T_F_BusinessFlowVariable.BusinessFlowID], T1.[T_F_BusinessFlowVariable.Name], T1.[T_F_BusinessFlowVariable.InitData], T1.[T_F_BusinessFlowVariable.Type])
    FROM (
        SELECT 
            T.ID AS [T_F_BusinessFlowVariable.ID], 
            T.BusinessFlowID AS [T_F_BusinessFlowVariable.BusinessFlowID], 
            T.Name AS [T_F_BusinessFlowVariable.Name], 
            T.InitData AS [T_F_BusinessFlowVariable.InitData], 
            T.Type AS [T_F_BusinessFlowVariable.Type], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_BusinessFlowVariable AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Demo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Demo", @"
    SELECT VALUE -- Constructing T_F_Demo
        [EF5TestModel.Store.T_F_Demo](T1.[T_F_Demo.id], T1.[T_F_Demo.name], T1.[T_F_Demo.des])
    FROM (
        SELECT 
            T.id AS [T_F_Demo.id], 
            T.name AS [T_F_Demo.name], 
            T.des AS [T_F_Demo.des], 
            True AS _from0
        FROM EFLocalTest.T_F_Demo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Demo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Demo", @"
    SELECT VALUE -- Constructing T_F_Demo
        [EF5TestModel.T_F_Demo](T1.[T_F_Demo.id], T1.[T_F_Demo.name], T1.[T_F_Demo.des])
    FROM (
        SELECT 
            T.id AS [T_F_Demo.id], 
            T.name AS [T_F_Demo.name], 
            T.des AS [T_F_Demo.des], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Demo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_DeskInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_DeskInfo", @"
    SELECT VALUE -- Constructing T_F_DeskInfo
        [EF5TestModel.Store.T_F_DeskInfo](T1.[T_F_DeskInfo.ID], T1.[T_F_DeskInfo.UserNo], T1.[T_F_DeskInfo.HiddenInfo], T1.[T_F_DeskInfo.ExtendInfo])
    FROM (
        SELECT 
            T.ID AS [T_F_DeskInfo.ID], 
            T.UserNo AS [T_F_DeskInfo.UserNo], 
            T.HiddenInfo AS [T_F_DeskInfo.HiddenInfo], 
            T.ExtendInfo AS [T_F_DeskInfo.ExtendInfo], 
            True AS _from0
        FROM EFLocalTest.T_F_DeskInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_DeskInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_DeskInfo", @"
    SELECT VALUE -- Constructing T_F_DeskInfo
        [EF5TestModel.T_F_DeskInfo](T1.[T_F_DeskInfo.ID], T1.[T_F_DeskInfo.UserNo], T1.[T_F_DeskInfo.HiddenInfo], T1.[T_F_DeskInfo.ExtendInfo])
    FROM (
        SELECT 
            T.ID AS [T_F_DeskInfo.ID], 
            T.UserNo AS [T_F_DeskInfo.UserNo], 
            T.HiddenInfo AS [T_F_DeskInfo.HiddenInfo], 
            T.ExtendInfo AS [T_F_DeskInfo.ExtendInfo], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_DeskInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_HistoryData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_HistoryData", @"
    SELECT VALUE -- Constructing T_F_HistoryData
        [EF5TestModel.Store.T_F_HistoryData](T1.[T_F_HistoryData.ID], T1.[T_F_HistoryData.UIInstanceID], T1.[T_F_HistoryData.Version], T1.[T_F_HistoryData.EntityID], T1.[T_F_HistoryData.ColID], T1.[T_F_HistoryData.Value], T1.[T_F_HistoryData.ModifyTime], T1.[T_F_HistoryData.UserID], T1.[T_F_HistoryData.UIID])
    FROM (
        SELECT 
            T.ID AS [T_F_HistoryData.ID], 
            T.UIInstanceID AS [T_F_HistoryData.UIInstanceID], 
            T.Version AS [T_F_HistoryData.Version], 
            T.EntityID AS [T_F_HistoryData.EntityID], 
            T.ColID AS [T_F_HistoryData.ColID], 
            T.[Value] AS [T_F_HistoryData.Value], 
            T.ModifyTime AS [T_F_HistoryData.ModifyTime], 
            T.UserID AS [T_F_HistoryData.UserID], 
            T.UIID AS [T_F_HistoryData.UIID], 
            True AS _from0
        FROM EFLocalTest.T_F_HistoryData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_HistoryData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_HistoryData", @"
    SELECT VALUE -- Constructing T_F_HistoryData
        [EF5TestModel.T_F_HistoryData](T1.[T_F_HistoryData.ID], T1.[T_F_HistoryData.UIInstanceID], T1.[T_F_HistoryData.Version], T1.[T_F_HistoryData.EntityID], T1.[T_F_HistoryData.ColID], T1.[T_F_HistoryData.Value], T1.[T_F_HistoryData.ModifyTime], T1.[T_F_HistoryData.UserID], T1.[T_F_HistoryData.UIID])
    FROM (
        SELECT 
            T.ID AS [T_F_HistoryData.ID], 
            T.UIInstanceID AS [T_F_HistoryData.UIInstanceID], 
            T.Version AS [T_F_HistoryData.Version], 
            T.EntityID AS [T_F_HistoryData.EntityID], 
            T.ColID AS [T_F_HistoryData.ColID], 
            T.[Value] AS [T_F_HistoryData.Value], 
            T.ModifyTime AS [T_F_HistoryData.ModifyTime], 
            T.UserID AS [T_F_HistoryData.UserID], 
            T.UIID AS [T_F_HistoryData.UIID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_HistoryData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Images
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Images", @"
    SELECT VALUE -- Constructing T_F_Images
        [EF5TestModel.Store.T_F_Images](T1.[T_F_Images.ID], T1.[T_F_Images.ImgName], T1.[T_F_Images.ImgInfo], T1.[T_F_Images.AltInfo])
    FROM (
        SELECT 
            T.ID AS [T_F_Images.ID], 
            T.ImgName AS [T_F_Images.ImgName], 
            T.ImgInfo AS [T_F_Images.ImgInfo], 
            T.AltInfo AS [T_F_Images.AltInfo], 
            True AS _from0
        FROM EFLocalTest.T_F_Images AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Images
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Images", @"
    SELECT VALUE -- Constructing T_F_Images
        [EF5TestModel.T_F_Images](T1.[T_F_Images.ID], T1.[T_F_Images.ImgName], T1.[T_F_Images.ImgInfo], T1.[T_F_Images.AltInfo])
    FROM (
        SELECT 
            T.ID AS [T_F_Images.ID], 
            T.ImgName AS [T_F_Images.ImgName], 
            T.ImgInfo AS [T_F_Images.ImgInfo], 
            T.AltInfo AS [T_F_Images.AltInfo], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Images AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ItemTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ItemTemplate", @"
    SELECT VALUE -- Constructing T_F_ItemTemplate
        [EF5TestModel.Store.T_F_ItemTemplate](T1.[T_F_ItemTemplate.ID], T1.[T_F_ItemTemplate.name], T1.[T_F_ItemTemplate.displayName], T1.[T_F_ItemTemplate.image], T1.[T_F_ItemTemplate.type], T1.[T_F_ItemTemplate.description], T1.[T_F_ItemTemplate.template])
    FROM (
        SELECT 
            T.ID AS [T_F_ItemTemplate.ID], 
            T.name AS [T_F_ItemTemplate.name], 
            T.displayName AS [T_F_ItemTemplate.displayName], 
            T.image AS [T_F_ItemTemplate.image], 
            T.type AS [T_F_ItemTemplate.type], 
            T.description AS [T_F_ItemTemplate.description], 
            T.template AS [T_F_ItemTemplate.template], 
            True AS _from0
        FROM EFLocalTest.T_F_ItemTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ItemTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ItemTemplate", @"
    SELECT VALUE -- Constructing T_F_ItemTemplate
        [EF5TestModel.T_F_ItemTemplate](T1.[T_F_ItemTemplate.ID], T1.[T_F_ItemTemplate.name], T1.[T_F_ItemTemplate.displayName], T1.[T_F_ItemTemplate.image], T1.[T_F_ItemTemplate.type], T1.[T_F_ItemTemplate.description], T1.[T_F_ItemTemplate.template])
    FROM (
        SELECT 
            T.ID AS [T_F_ItemTemplate.ID], 
            T.name AS [T_F_ItemTemplate.name], 
            T.displayName AS [T_F_ItemTemplate.displayName], 
            T.image AS [T_F_ItemTemplate.image], 
            T.type AS [T_F_ItemTemplate.type], 
            T.description AS [T_F_ItemTemplate.description], 
            T.template AS [T_F_ItemTemplate.template], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ItemTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Log
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Log", @"
    SELECT VALUE -- Constructing T_F_Log
        [EF5TestModel.Store.T_F_Log](T1.[T_F_Log.ID], T1.[T_F_Log.UserID], T1.[T_F_Log.IP], T1.[T_F_Log.HostName], T1.[T_F_Log.OperationName], T1.[T_F_Log.OperationType], T1.[T_F_Log.OperationContent], T1.[T_F_Log.OperationTime])
    FROM (
        SELECT 
            T.ID AS [T_F_Log.ID], 
            T.UserID AS [T_F_Log.UserID], 
            T.IP AS [T_F_Log.IP], 
            T.HostName AS [T_F_Log.HostName], 
            T.OperationName AS [T_F_Log.OperationName], 
            T.OperationType AS [T_F_Log.OperationType], 
            T.OperationContent AS [T_F_Log.OperationContent], 
            T.OperationTime AS [T_F_Log.OperationTime], 
            True AS _from0
        FROM EFLocalTest.T_F_Log AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Log
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Log", @"
    SELECT VALUE -- Constructing T_F_Log
        [EF5TestModel.T_F_Log](T1.[T_F_Log.ID], T1.[T_F_Log.UserID], T1.[T_F_Log.IP], T1.[T_F_Log.HostName], T1.[T_F_Log.OperationName], T1.[T_F_Log.OperationType], T1.[T_F_Log.OperationContent], T1.[T_F_Log.OperationTime])
    FROM (
        SELECT 
            T.ID AS [T_F_Log.ID], 
            T.UserID AS [T_F_Log.UserID], 
            T.IP AS [T_F_Log.IP], 
            T.HostName AS [T_F_Log.HostName], 
            T.OperationName AS [T_F_Log.OperationName], 
            T.OperationType AS [T_F_Log.OperationType], 
            T.OperationContent AS [T_F_Log.OperationContent], 
            T.OperationTime AS [T_F_Log.OperationTime], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Log AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Menu
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Menu", @"
    SELECT VALUE -- Constructing T_F_Menu
        [EF5TestModel.Store.T_F_Menu](T1.[T_F_Menu.ID], T1.[T_F_Menu.Num], T1.[T_F_Menu.OrderIndex], T1.[T_F_Menu.OpenMode], T1.[T_F_Menu.Privilege], T1.[T_F_Menu.RequestObject], T1.[T_F_Menu.ImagePath], T1.[T_F_Menu.Enabled], T1.[T_F_Menu.Visible], T1.[T_F_Menu.Platform], T1.[T_F_Menu.Name], T1.[T_F_Menu.Description], T1.[T_F_Menu.IsFixed], T1.[T_F_Menu.IsAutoOpen], T1.[T_F_Menu.ParentID])
    FROM (
        SELECT 
            T.ID AS [T_F_Menu.ID], 
            T.Num AS [T_F_Menu.Num], 
            T.OrderIndex AS [T_F_Menu.OrderIndex], 
            T.OpenMode AS [T_F_Menu.OpenMode], 
            T.Privilege AS [T_F_Menu.Privilege], 
            T.RequestObject AS [T_F_Menu.RequestObject], 
            T.ImagePath AS [T_F_Menu.ImagePath], 
            T.Enabled AS [T_F_Menu.Enabled], 
            T.Visible AS [T_F_Menu.Visible], 
            T.Platform AS [T_F_Menu.Platform], 
            T.Name AS [T_F_Menu.Name], 
            T.Description AS [T_F_Menu.Description], 
            T.IsFixed AS [T_F_Menu.IsFixed], 
            T.IsAutoOpen AS [T_F_Menu.IsAutoOpen], 
            T.ParentID AS [T_F_Menu.ParentID], 
            True AS _from0
        FROM EFLocalTest.T_F_Menu AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Menu
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Menu", @"
    SELECT VALUE -- Constructing T_F_Menu
        [EF5TestModel.T_F_Menu](T1.[T_F_Menu.ID], T1.[T_F_Menu.Num], T1.[T_F_Menu.OrderIndex], T1.[T_F_Menu.OpenMode], T1.[T_F_Menu.Privilege], T1.[T_F_Menu.RequestObject], T1.[T_F_Menu.ImagePath], T1.[T_F_Menu.Enabled], T1.[T_F_Menu.Visible], T1.[T_F_Menu.Platform], T1.[T_F_Menu.Name], T1.[T_F_Menu.Description], T1.[T_F_Menu.IsFixed], T1.[T_F_Menu.IsAutoOpen], T1.[T_F_Menu.ParentID])
    FROM (
        SELECT 
            T.ID AS [T_F_Menu.ID], 
            T.Num AS [T_F_Menu.Num], 
            T.OrderIndex AS [T_F_Menu.OrderIndex], 
            T.OpenMode AS [T_F_Menu.OpenMode], 
            T.Privilege AS [T_F_Menu.Privilege], 
            T.RequestObject AS [T_F_Menu.RequestObject], 
            T.ImagePath AS [T_F_Menu.ImagePath], 
            T.Enabled AS [T_F_Menu.Enabled], 
            T.Visible AS [T_F_Menu.Visible], 
            T.Platform AS [T_F_Menu.Platform], 
            T.Name AS [T_F_Menu.Name], 
            T.Description AS [T_F_Menu.Description], 
            T.IsFixed AS [T_F_Menu.IsFixed], 
            T.IsAutoOpen AS [T_F_Menu.IsAutoOpen], 
            T.ParentID AS [T_F_Menu.ParentID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Menu AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Message
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Message", @"
    SELECT VALUE -- Constructing T_F_Message
        [EF5TestModel.Store.T_F_Message](T1.[T_F_Message.ID], T1.[T_F_Message.Title], T1.[T_F_Message.SenderID], T1.[T_F_Message.ReceiverID], T1.[T_F_Message.SendTime], T1.[T_F_Message.ReadTime], T1.[T_F_Message.Type], T1.[T_F_Message.MainRecordID], T1.[T_F_Message.Importance], T1.[T_F_Message.IsRead], T1.[T_F_Message.StartTime], T1.[T_F_Message.EndTime])
    FROM (
        SELECT 
            T.ID AS [T_F_Message.ID], 
            T.Title AS [T_F_Message.Title], 
            T.SenderID AS [T_F_Message.SenderID], 
            T.ReceiverID AS [T_F_Message.ReceiverID], 
            T.SendTime AS [T_F_Message.SendTime], 
            T.ReadTime AS [T_F_Message.ReadTime], 
            T.Type AS [T_F_Message.Type], 
            T.MainRecordID AS [T_F_Message.MainRecordID], 
            T.Importance AS [T_F_Message.Importance], 
            T.IsRead AS [T_F_Message.IsRead], 
            T.StartTime AS [T_F_Message.StartTime], 
            T.EndTime AS [T_F_Message.EndTime], 
            True AS _from0
        FROM EFLocalTest.T_F_Message AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Message
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Message", @"
    SELECT VALUE -- Constructing T_F_Message
        [EF5TestModel.T_F_Message](T1.[T_F_Message.ID], T1.[T_F_Message.Title], T1.[T_F_Message.SenderID], T1.[T_F_Message.ReceiverID], T1.[T_F_Message.SendTime], T1.[T_F_Message.ReadTime], T1.[T_F_Message.Type], T1.[T_F_Message.MainRecordID], T1.[T_F_Message.Importance], T1.[T_F_Message.IsRead], T1.[T_F_Message.StartTime], T1.[T_F_Message.EndTime])
    FROM (
        SELECT 
            T.ID AS [T_F_Message.ID], 
            T.Title AS [T_F_Message.Title], 
            T.SenderID AS [T_F_Message.SenderID], 
            T.ReceiverID AS [T_F_Message.ReceiverID], 
            T.SendTime AS [T_F_Message.SendTime], 
            T.ReadTime AS [T_F_Message.ReadTime], 
            T.Type AS [T_F_Message.Type], 
            T.MainRecordID AS [T_F_Message.MainRecordID], 
            T.Importance AS [T_F_Message.Importance], 
            T.IsRead AS [T_F_Message.IsRead], 
            T.StartTime AS [T_F_Message.StartTime], 
            T.EndTime AS [T_F_Message.EndTime], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Message AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_MetaData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_MetaData", @"
    SELECT VALUE -- Constructing T_F_MetaData
        [EF5TestModel.Store.T_F_MetaData](T1.[T_F_MetaData.ID], T1.[T_F_MetaData.ProjectID], T1.[T_F_MetaData.Name], T1.[T_F_MetaData.DisplayName], T1.[T_F_MetaData.Type], T1.[T_F_MetaData.Remark], T1.[T_F_MetaData.MetaData], T1.[T_F_MetaData.State], T1.[T_F_MetaData.ModifyTime], T1.[T_F_MetaData.XmlMetaData])
    FROM (
        SELECT 
            T.ID AS [T_F_MetaData.ID], 
            T.ProjectID AS [T_F_MetaData.ProjectID], 
            T.Name AS [T_F_MetaData.Name], 
            T.DisplayName AS [T_F_MetaData.DisplayName], 
            T.Type AS [T_F_MetaData.Type], 
            T.Remark AS [T_F_MetaData.Remark], 
            T.MetaData AS [T_F_MetaData.MetaData], 
            T.State AS [T_F_MetaData.State], 
            T.ModifyTime AS [T_F_MetaData.ModifyTime], 
            T.XmlMetaData AS [T_F_MetaData.XmlMetaData], 
            True AS _from0
        FROM EFLocalTest.T_F_MetaData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_MetaData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_MetaData", @"
    SELECT VALUE -- Constructing T_F_MetaData
        [EF5TestModel.T_F_MetaData](T1.[T_F_MetaData.ID], T1.[T_F_MetaData.ProjectID], T1.[T_F_MetaData.Name], T1.[T_F_MetaData.DisplayName], T1.[T_F_MetaData.Type], T1.[T_F_MetaData.Remark], T1.[T_F_MetaData.MetaData], T1.[T_F_MetaData.State], T1.[T_F_MetaData.ModifyTime], T1.[T_F_MetaData.XmlMetaData])
    FROM (
        SELECT 
            T.ID AS [T_F_MetaData.ID], 
            T.ProjectID AS [T_F_MetaData.ProjectID], 
            T.Name AS [T_F_MetaData.Name], 
            T.DisplayName AS [T_F_MetaData.DisplayName], 
            T.Type AS [T_F_MetaData.Type], 
            T.Remark AS [T_F_MetaData.Remark], 
            T.MetaData AS [T_F_MetaData.MetaData], 
            T.State AS [T_F_MetaData.State], 
            T.ModifyTime AS [T_F_MetaData.ModifyTime], 
            T.XmlMetaData AS [T_F_MetaData.XmlMetaData], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_MetaData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_MetaData_DataEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_MetaData_DataEntity", "\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataEntity\r\n        [EF5TestModel" +
                    ".Store.T_F_MetaData_DataEntity](T1.[T_F_MetaData_DataEntity.EntityID], T1.[T_F_M" +
                    "etaData_DataEntity.Name], T1.[T_F_MetaData_DataEntity.OrderID], T1.[T_F_MetaData" +
                    "_DataEntity.TableName], T1.[T_F_MetaData_DataEntity.ClassName], T1.[T_F_MetaData" +
                    "_DataEntity.EntityTypeID], T1.[T_F_MetaData_DataEntity.Description], T1.[T_F_Met" +
                    "aData_DataEntity.IsAbstract], T1.[T_F_MetaData_DataEntity.BaseEntityID], T1.[T_F" +
                    "_MetaData_DataEntity.ParentID], T1.[T_F_MetaData_DataEntity.LevelNum], T1.[T_F_M" +
                    "etaData_DataEntity.IsDetail], T1.[T_F_MetaData_DataEntity.TimeStamp], T1.[T_F_Me" +
                    "taData_DataEntity.SchemaXML])\r\n    FROM (\r\n        SELECT \r\n            T.Entity" +
                    "ID AS [T_F_MetaData_DataEntity.EntityID], \r\n            T.Name AS [T_F_MetaData_" +
                    "DataEntity.Name], \r\n            T.OrderID AS [T_F_MetaData_DataEntity.OrderID], " +
                    "\r\n            T.TableName AS [T_F_MetaData_DataEntity.TableName], \r\n            " +
                    "T.ClassName AS [T_F_MetaData_DataEntity.ClassName], \r\n            T.EntityTypeID" +
                    " AS [T_F_MetaData_DataEntity.EntityTypeID], \r\n            T.Description AS [T_F_" +
                    "MetaData_DataEntity.Description], \r\n            T.IsAbstract AS [T_F_MetaData_Da" +
                    "taEntity.IsAbstract], \r\n            T.BaseEntityID AS [T_F_MetaData_DataEntity.B" +
                    "aseEntityID], \r\n            T.ParentID AS [T_F_MetaData_DataEntity.ParentID], \r\n" +
                    "            T.LevelNum AS [T_F_MetaData_DataEntity.LevelNum], \r\n            T.Is" +
                    "Detail AS [T_F_MetaData_DataEntity.IsDetail], \r\n            T.TimeStamp AS [T_F_" +
                    "MetaData_DataEntity.TimeStamp], \r\n            T.SchemaXML AS [T_F_MetaData_DataE" +
                    "ntity.SchemaXML], \r\n            True AS _from0\r\n        FROM EFLocalTest.T_F_Met" +
                    "aData_DataEntity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_MetaData_DataEntity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_MetaData_DataEntity", "\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataEntity\r\n        [EF5TestModel" +
                    ".T_F_MetaData_DataEntity](T1.[T_F_MetaData_DataEntity.EntityID], T1.[T_F_MetaDat" +
                    "a_DataEntity.Name], T1.[T_F_MetaData_DataEntity.OrderID], T1.[T_F_MetaData_DataE" +
                    "ntity.TableName], T1.[T_F_MetaData_DataEntity.ClassName], T1.[T_F_MetaData_DataE" +
                    "ntity.EntityTypeID], T1.[T_F_MetaData_DataEntity.Description], T1.[T_F_MetaData_" +
                    "DataEntity.IsAbstract], T1.[T_F_MetaData_DataEntity.BaseEntityID], T1.[T_F_MetaD" +
                    "ata_DataEntity.ParentID], T1.[T_F_MetaData_DataEntity.LevelNum], T1.[T_F_MetaDat" +
                    "a_DataEntity.IsDetail], T1.[T_F_MetaData_DataEntity.TimeStamp], T1.[T_F_MetaData" +
                    "_DataEntity.SchemaXML])\r\n    FROM (\r\n        SELECT \r\n            T.EntityID AS " +
                    "[T_F_MetaData_DataEntity.EntityID], \r\n            T.Name AS [T_F_MetaData_DataEn" +
                    "tity.Name], \r\n            T.OrderID AS [T_F_MetaData_DataEntity.OrderID], \r\n    " +
                    "        T.TableName AS [T_F_MetaData_DataEntity.TableName], \r\n            T.Clas" +
                    "sName AS [T_F_MetaData_DataEntity.ClassName], \r\n            T.EntityTypeID AS [T" +
                    "_F_MetaData_DataEntity.EntityTypeID], \r\n            T.Description AS [T_F_MetaDa" +
                    "ta_DataEntity.Description], \r\n            T.IsAbstract AS [T_F_MetaData_DataEnti" +
                    "ty.IsAbstract], \r\n            T.BaseEntityID AS [T_F_MetaData_DataEntity.BaseEnt" +
                    "ityID], \r\n            T.ParentID AS [T_F_MetaData_DataEntity.ParentID], \r\n      " +
                    "      T.LevelNum AS [T_F_MetaData_DataEntity.LevelNum], \r\n            T.IsDetail" +
                    " AS [T_F_MetaData_DataEntity.IsDetail], \r\n            T.TimeStamp AS [T_F_MetaDa" +
                    "ta_DataEntity.TimeStamp], \r\n            T.SchemaXML AS [T_F_MetaData_DataEntity." +
                    "SchemaXML], \r\n            True AS _from0\r\n        FROM EF5TestModelStoreContaine" +
                    "r.T_F_MetaData_DataEntity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_MetaData_DataEntityCol
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_MetaData_DataEntityCol", "\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataEntityCol\r\n        [EF5TestMo" +
                    "del.Store.T_F_MetaData_DataEntityCol](T1.[T_F_MetaData_DataEntityCol.ColID], T1." +
                    "[T_F_MetaData_DataEntityCol.Name], T1.[T_F_MetaData_DataEntityCol.EntityID], T1." +
                    "[T_F_MetaData_DataEntityCol.OrderID], T1.[T_F_MetaData_DataEntityCol.FieldName]," +
                    " T1.[T_F_MetaData_DataEntityCol.FieldType], T1.[T_F_MetaData_DataEntityCol.BaseD" +
                    "ataTypeID], T1.[T_F_MetaData_DataEntityCol.DataTypeID], T1.[T_F_MetaData_DataEnt" +
                    "ityCol.Length], T1.[T_F_MetaData_DataEntityCol.Precision], T1.[T_F_MetaData_Data" +
                    "EntityCol.Uniqueness], T1.[T_F_MetaData_DataEntityCol.Required], T1.[T_F_MetaDat" +
                    "a_DataEntityCol.Description], T1.[T_F_MetaData_DataEntityCol.BaseColID], T1.[T_F" +
                    "_MetaData_DataEntityCol.BuiltInFieldTypeID])\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.ColID AS [T_F_MetaData_DataEntityCol.ColID], \r\n            T.Name AS [T" +
                    "_F_MetaData_DataEntityCol.Name], \r\n            T.EntityID AS [T_F_MetaData_DataE" +
                    "ntityCol.EntityID], \r\n            T.OrderID AS [T_F_MetaData_DataEntityCol.Order" +
                    "ID], \r\n            T.FieldName AS [T_F_MetaData_DataEntityCol.FieldName], \r\n    " +
                    "        T.FieldType AS [T_F_MetaData_DataEntityCol.FieldType], \r\n            T.B" +
                    "aseDataTypeID AS [T_F_MetaData_DataEntityCol.BaseDataTypeID], \r\n            T.Da" +
                    "taTypeID AS [T_F_MetaData_DataEntityCol.DataTypeID], \r\n            T.Length AS [" +
                    "T_F_MetaData_DataEntityCol.Length], \r\n            T.Precision AS [T_F_MetaData_D" +
                    "ataEntityCol.Precision], \r\n            T.Uniqueness AS [T_F_MetaData_DataEntityC" +
                    "ol.Uniqueness], \r\n            T.Required AS [T_F_MetaData_DataEntityCol.Required" +
                    "], \r\n            T.Description AS [T_F_MetaData_DataEntityCol.Description], \r\n  " +
                    "          T.BaseColID AS [T_F_MetaData_DataEntityCol.BaseColID], \r\n            T" +
                    ".BuiltInFieldTypeID AS [T_F_MetaData_DataEntityCol.BuiltInFieldTypeID], \r\n      " +
                    "      True AS _from0\r\n        FROM EFLocalTest.T_F_MetaData_DataEntityCol AS T\r\n" +
                    "    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_MetaData_DataEntityCol
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_MetaData_DataEntityCol", "\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataEntityCol\r\n        [EF5TestMo" +
                    "del.T_F_MetaData_DataEntityCol](T1.[T_F_MetaData_DataEntityCol.ColID], T1.[T_F_M" +
                    "etaData_DataEntityCol.Name], T1.[T_F_MetaData_DataEntityCol.EntityID], T1.[T_F_M" +
                    "etaData_DataEntityCol.OrderID], T1.[T_F_MetaData_DataEntityCol.FieldName], T1.[T" +
                    "_F_MetaData_DataEntityCol.FieldType], T1.[T_F_MetaData_DataEntityCol.BaseDataTyp" +
                    "eID], T1.[T_F_MetaData_DataEntityCol.DataTypeID], T1.[T_F_MetaData_DataEntityCol" +
                    ".Length], T1.[T_F_MetaData_DataEntityCol.Precision], T1.[T_F_MetaData_DataEntity" +
                    "Col.Uniqueness], T1.[T_F_MetaData_DataEntityCol.Required], T1.[T_F_MetaData_Data" +
                    "EntityCol.Description], T1.[T_F_MetaData_DataEntityCol.BaseColID], T1.[T_F_MetaD" +
                    "ata_DataEntityCol.BuiltInFieldTypeID])\r\n    FROM (\r\n        SELECT \r\n           " +
                    " T.ColID AS [T_F_MetaData_DataEntityCol.ColID], \r\n            T.Name AS [T_F_Met" +
                    "aData_DataEntityCol.Name], \r\n            T.EntityID AS [T_F_MetaData_DataEntityC" +
                    "ol.EntityID], \r\n            T.OrderID AS [T_F_MetaData_DataEntityCol.OrderID], \r" +
                    "\n            T.FieldName AS [T_F_MetaData_DataEntityCol.FieldName], \r\n          " +
                    "  T.FieldType AS [T_F_MetaData_DataEntityCol.FieldType], \r\n            T.BaseDat" +
                    "aTypeID AS [T_F_MetaData_DataEntityCol.BaseDataTypeID], \r\n            T.DataType" +
                    "ID AS [T_F_MetaData_DataEntityCol.DataTypeID], \r\n            T.Length AS [T_F_Me" +
                    "taData_DataEntityCol.Length], \r\n            T.Precision AS [T_F_MetaData_DataEnt" +
                    "ityCol.Precision], \r\n            T.Uniqueness AS [T_F_MetaData_DataEntityCol.Uni" +
                    "queness], \r\n            T.Required AS [T_F_MetaData_DataEntityCol.Required], \r\n " +
                    "           T.Description AS [T_F_MetaData_DataEntityCol.Description], \r\n        " +
                    "    T.BaseColID AS [T_F_MetaData_DataEntityCol.BaseColID], \r\n            T.Built" +
                    "InFieldTypeID AS [T_F_MetaData_DataEntityCol.BuiltInFieldTypeID], \r\n            " +
                    "True AS _from0\r\n        FROM EF5TestModelStoreContainer.T_F_MetaData_DataEntityC" +
                    "ol AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_MetaData_DataTypeNative
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2079);
            viewString.Append("\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataTypeNative\r\n        [EF5Test");
            viewString.Append("Model.Store.T_F_MetaData_DataTypeNative](T1.[T_F_MetaData_DataTypeNative.DataTyp");
            viewString.Append("eID], T1.[T_F_MetaData_DataTypeNative.Name], T1.[T_F_MetaData_DataTypeNative.Act");
            viewString.Append("ualType], T1.[T_F_MetaData_DataTypeNative.SystemType], T1.[T_F_MetaData_DataType");
            viewString.Append("Native.NHibernateType], T1.[T_F_MetaData_DataTypeNative.NeedLength], T1.[T_F_Met");
            viewString.Append("aData_DataTypeNative.NeedPrecision], T1.[T_F_MetaData_DataTypeNative.NeedUnique]");
            viewString.Append(", T1.[T_F_MetaData_DataTypeNative.NeedRequired], T1.[T_F_MetaData_DataTypeNative");
            viewString.Append(".NeedVisible], T1.[T_F_MetaData_DataTypeNative.CanSetPrimaryKey], T1.[T_F_MetaDa");
            viewString.Append("ta_DataTypeNative.CanSetValue], T1.[T_F_MetaData_DataTypeNative.Description], T1");
            viewString.Append(".[T_F_MetaData_DataTypeNative.RecordNum], T1.[T_F_MetaData_DataTypeNative.NeedSu");
            viewString.Append("pportMultiLanguage])\r\n    FROM (\r\n        SELECT \r\n            T.DataTypeID AS [");
            viewString.Append("T_F_MetaData_DataTypeNative.DataTypeID], \r\n            T.Name AS [T_F_MetaData_D");
            viewString.Append("ataTypeNative.Name], \r\n            T.ActualType AS [T_F_MetaData_DataTypeNative.");
            viewString.Append("ActualType], \r\n            T.SystemType AS [T_F_MetaData_DataTypeNative.SystemTy");
            viewString.Append("pe], \r\n            T.NHibernateType AS [T_F_MetaData_DataTypeNative.NHibernateTy");
            viewString.Append("pe], \r\n            T.NeedLength AS [T_F_MetaData_DataTypeNative.NeedLength], \r\n ");
            viewString.Append("           T.NeedPrecision AS [T_F_MetaData_DataTypeNative.NeedPrecision], \r\n   ");
            viewString.Append("         T.NeedUnique AS [T_F_MetaData_DataTypeNative.NeedUnique], \r\n           ");
            viewString.Append(" T.NeedRequired AS [T_F_MetaData_DataTypeNative.NeedRequired], \r\n            T.N");
            viewString.Append("eedVisible AS [T_F_MetaData_DataTypeNative.NeedVisible], \r\n            T.CanSetP");
            viewString.Append("rimaryKey AS [T_F_MetaData_DataTypeNative.CanSetPrimaryKey], \r\n            T.Can");
            viewString.Append("SetValue AS [T_F_MetaData_DataTypeNative.CanSetValue], \r\n            T.Descripti");
            viewString.Append("on AS [T_F_MetaData_DataTypeNative.Description], \r\n            T.RecordNum AS [T");
            viewString.Append("_F_MetaData_DataTypeNative.RecordNum], \r\n            T.NeedSupportMultiLanguage ");
            viewString.Append("AS [T_F_MetaData_DataTypeNative.NeedSupportMultiLanguage], \r\n            True AS");
            viewString.Append(" _from0\r\n        FROM EFLocalTest.T_F_MetaData_DataTypeNative AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_MetaData_DataTypeNative", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_MetaData_DataTypeNative
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2088);
            viewString.Append("\r\n    SELECT VALUE -- Constructing T_F_MetaData_DataTypeNative\r\n        [EF5Test");
            viewString.Append("Model.T_F_MetaData_DataTypeNative](T1.[T_F_MetaData_DataTypeNative.DataTypeID], ");
            viewString.Append("T1.[T_F_MetaData_DataTypeNative.Name], T1.[T_F_MetaData_DataTypeNative.ActualTyp");
            viewString.Append("e], T1.[T_F_MetaData_DataTypeNative.SystemType], T1.[T_F_MetaData_DataTypeNative");
            viewString.Append(".NHibernateType], T1.[T_F_MetaData_DataTypeNative.NeedLength], T1.[T_F_MetaData_");
            viewString.Append("DataTypeNative.NeedPrecision], T1.[T_F_MetaData_DataTypeNative.NeedUnique], T1.[");
            viewString.Append("T_F_MetaData_DataTypeNative.NeedRequired], T1.[T_F_MetaData_DataTypeNative.NeedV");
            viewString.Append("isible], T1.[T_F_MetaData_DataTypeNative.CanSetPrimaryKey], T1.[T_F_MetaData_Dat");
            viewString.Append("aTypeNative.CanSetValue], T1.[T_F_MetaData_DataTypeNative.Description], T1.[T_F_");
            viewString.Append("MetaData_DataTypeNative.RecordNum], T1.[T_F_MetaData_DataTypeNative.NeedSupportM");
            viewString.Append("ultiLanguage])\r\n    FROM (\r\n        SELECT \r\n            T.DataTypeID AS [T_F_Me");
            viewString.Append("taData_DataTypeNative.DataTypeID], \r\n            T.Name AS [T_F_MetaData_DataTyp");
            viewString.Append("eNative.Name], \r\n            T.ActualType AS [T_F_MetaData_DataTypeNative.Actual");
            viewString.Append("Type], \r\n            T.SystemType AS [T_F_MetaData_DataTypeNative.SystemType], \r");
            viewString.Append("\n            T.NHibernateType AS [T_F_MetaData_DataTypeNative.NHibernateType], \r");
            viewString.Append("\n            T.NeedLength AS [T_F_MetaData_DataTypeNative.NeedLength], \r\n       ");
            viewString.Append("     T.NeedPrecision AS [T_F_MetaData_DataTypeNative.NeedPrecision], \r\n         ");
            viewString.Append("   T.NeedUnique AS [T_F_MetaData_DataTypeNative.NeedUnique], \r\n            T.Nee");
            viewString.Append("dRequired AS [T_F_MetaData_DataTypeNative.NeedRequired], \r\n            T.NeedVis");
            viewString.Append("ible AS [T_F_MetaData_DataTypeNative.NeedVisible], \r\n            T.CanSetPrimary");
            viewString.Append("Key AS [T_F_MetaData_DataTypeNative.CanSetPrimaryKey], \r\n            T.CanSetVal");
            viewString.Append("ue AS [T_F_MetaData_DataTypeNative.CanSetValue], \r\n            T.Description AS ");
            viewString.Append("[T_F_MetaData_DataTypeNative.Description], \r\n            T.RecordNum AS [T_F_Met");
            viewString.Append("aData_DataTypeNative.RecordNum], \r\n            T.NeedSupportMultiLanguage AS [T_");
            viewString.Append("F_MetaData_DataTypeNative.NeedSupportMultiLanguage], \r\n            True AS _from");
            viewString.Append("0\r\n        FROM EF5TestModelStoreContainer.T_F_MetaData_DataTypeNative AS T\r\n   ");
            viewString.Append(" ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_MetaData_DataTypeNative", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_MetaData_UIInstance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_MetaData_UIInstance", @"
    SELECT VALUE -- Constructing T_F_MetaData_UIInstance
        [EF5TestModel.Store.T_F_MetaData_UIInstance](T1.[T_F_MetaData_UIInstance.ID], T1.[T_F_MetaData_UIInstance.UIID], T1.[T_F_MetaData_UIInstance.MainEntityInstanceID], T1.[T_F_MetaData_UIInstance.Version], T1.[T_F_MetaData_UIInstance.AccessoriesID], T1.[T_F_MetaData_UIInstance.IsDelete])
    FROM (
        SELECT 
            T.ID AS [T_F_MetaData_UIInstance.ID], 
            T.UIID AS [T_F_MetaData_UIInstance.UIID], 
            T.MainEntityInstanceID AS [T_F_MetaData_UIInstance.MainEntityInstanceID], 
            T.Version AS [T_F_MetaData_UIInstance.Version], 
            T.AccessoriesID AS [T_F_MetaData_UIInstance.AccessoriesID], 
            T.IsDelete AS [T_F_MetaData_UIInstance.IsDelete], 
            True AS _from0
        FROM EFLocalTest.T_F_MetaData_UIInstance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_MetaData_UIInstance
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_MetaData_UIInstance", @"
    SELECT VALUE -- Constructing T_F_MetaData_UIInstance
        [EF5TestModel.T_F_MetaData_UIInstance](T1.[T_F_MetaData_UIInstance.ID], T1.[T_F_MetaData_UIInstance.UIID], T1.[T_F_MetaData_UIInstance.MainEntityInstanceID], T1.[T_F_MetaData_UIInstance.Version], T1.[T_F_MetaData_UIInstance.AccessoriesID], T1.[T_F_MetaData_UIInstance.IsDelete])
    FROM (
        SELECT 
            T.ID AS [T_F_MetaData_UIInstance.ID], 
            T.UIID AS [T_F_MetaData_UIInstance.UIID], 
            T.MainEntityInstanceID AS [T_F_MetaData_UIInstance.MainEntityInstanceID], 
            T.Version AS [T_F_MetaData_UIInstance.Version], 
            T.AccessoriesID AS [T_F_MetaData_UIInstance.AccessoriesID], 
            T.IsDelete AS [T_F_MetaData_UIInstance.IsDelete], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_MetaData_UIInstance AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Offices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Offices", @"
    SELECT VALUE -- Constructing T_F_Offices
        [EF5TestModel.Store.T_F_Offices](T1.[T_F_Offices.ID], T1.[T_F_Offices.Logic], T1.[T_F_Offices.OfficeContent])
    FROM (
        SELECT 
            T.ID AS [T_F_Offices.ID], 
            T.Logic AS [T_F_Offices.Logic], 
            T.OfficeContent AS [T_F_Offices.OfficeContent], 
            True AS _from0
        FROM EFLocalTest.T_F_Offices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Offices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Offices", @"
    SELECT VALUE -- Constructing T_F_Offices
        [EF5TestModel.T_F_Offices](T1.[T_F_Offices.ID], T1.[T_F_Offices.Logic], T1.[T_F_Offices.OfficeContent])
    FROM (
        SELECT 
            T.ID AS [T_F_Offices.ID], 
            T.Logic AS [T_F_Offices.Logic], 
            T.OfficeContent AS [T_F_Offices.OfficeContent], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Offices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_OperationLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_OperationLog", @"
    SELECT VALUE -- Constructing T_F_OperationLog
        [EF5TestModel.Store.T_F_OperationLog](T1.[T_F_OperationLog.ID], T1.[T_F_OperationLog.SystemID], T1.[T_F_OperationLog.SystemName], T1.[T_F_OperationLog.ModuleID], T1.[T_F_OperationLog.ModuleName], T1.[T_F_OperationLog.LogDescribe], T1.[T_F_OperationLog.LogType], T1.[T_F_OperationLog.IPAddress], T1.[T_F_OperationLog.SourceTable], T1.[T_F_OperationLog.SourceGUID], T1.[T_F_OperationLog.CreateTime], T1.[T_F_OperationLog.CreatePersonAccount], T1.[T_F_OperationLog.CreatePersonName])
    FROM (
        SELECT 
            T.ID AS [T_F_OperationLog.ID], 
            T.SystemID AS [T_F_OperationLog.SystemID], 
            T.SystemName AS [T_F_OperationLog.SystemName], 
            T.ModuleID AS [T_F_OperationLog.ModuleID], 
            T.ModuleName AS [T_F_OperationLog.ModuleName], 
            T.LogDescribe AS [T_F_OperationLog.LogDescribe], 
            T.LogType AS [T_F_OperationLog.LogType], 
            T.IPAddress AS [T_F_OperationLog.IPAddress], 
            T.SourceTable AS [T_F_OperationLog.SourceTable], 
            T.SourceGUID AS [T_F_OperationLog.SourceGUID], 
            T.CreateTime AS [T_F_OperationLog.CreateTime], 
            T.CreatePersonAccount AS [T_F_OperationLog.CreatePersonAccount], 
            T.CreatePersonName AS [T_F_OperationLog.CreatePersonName], 
            True AS _from0
        FROM EFLocalTest.T_F_OperationLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_OperationLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_OperationLog", @"
    SELECT VALUE -- Constructing T_F_OperationLog
        [EF5TestModel.T_F_OperationLog](T1.[T_F_OperationLog.ID], T1.[T_F_OperationLog.SystemID], T1.[T_F_OperationLog.SystemName], T1.[T_F_OperationLog.ModuleID], T1.[T_F_OperationLog.ModuleName], T1.[T_F_OperationLog.LogDescribe], T1.[T_F_OperationLog.LogType], T1.[T_F_OperationLog.IPAddress], T1.[T_F_OperationLog.SourceTable], T1.[T_F_OperationLog.SourceGUID], T1.[T_F_OperationLog.CreateTime], T1.[T_F_OperationLog.CreatePersonAccount], T1.[T_F_OperationLog.CreatePersonName])
    FROM (
        SELECT 
            T.ID AS [T_F_OperationLog.ID], 
            T.SystemID AS [T_F_OperationLog.SystemID], 
            T.SystemName AS [T_F_OperationLog.SystemName], 
            T.ModuleID AS [T_F_OperationLog.ModuleID], 
            T.ModuleName AS [T_F_OperationLog.ModuleName], 
            T.LogDescribe AS [T_F_OperationLog.LogDescribe], 
            T.LogType AS [T_F_OperationLog.LogType], 
            T.IPAddress AS [T_F_OperationLog.IPAddress], 
            T.SourceTable AS [T_F_OperationLog.SourceTable], 
            T.SourceGUID AS [T_F_OperationLog.SourceGUID], 
            T.CreateTime AS [T_F_OperationLog.CreateTime], 
            T.CreatePersonAccount AS [T_F_OperationLog.CreatePersonAccount], 
            T.CreatePersonName AS [T_F_OperationLog.CreatePersonName], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_OperationLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Parameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Parameter", @"
    SELECT VALUE -- Constructing T_F_Parameter
        [EF5TestModel.Store.T_F_Parameter](T1.[T_F_Parameter.ID], T1.[T_F_Parameter.Name], T1.[T_F_Parameter.Value], T1.[T_F_Parameter.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_Parameter.ID], 
            T.Name AS [T_F_Parameter.Name], 
            T.[Value] AS [T_F_Parameter.Value], 
            T.Description AS [T_F_Parameter.Description], 
            True AS _from0
        FROM EFLocalTest.T_F_Parameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Parameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Parameter", @"
    SELECT VALUE -- Constructing T_F_Parameter
        [EF5TestModel.T_F_Parameter](T1.[T_F_Parameter.ID], T1.[T_F_Parameter.Name], T1.[T_F_Parameter.Value], T1.[T_F_Parameter.Description])
    FROM (
        SELECT 
            T.ID AS [T_F_Parameter.ID], 
            T.Name AS [T_F_Parameter.Name], 
            T.[Value] AS [T_F_Parameter.Value], 
            T.Description AS [T_F_Parameter.Description], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Parameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_PrintConfig
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_PrintConfig", @"
    SELECT VALUE -- Constructing T_F_PrintConfig
        [EF5TestModel.Store.T_F_PrintConfig](T1.[T_F_PrintConfig.ID], T1.[T_F_PrintConfig.printEdition], T1.[T_F_PrintConfig.printXml], T1.[T_F_PrintConfig.printName])
    FROM (
        SELECT 
            T.ID AS [T_F_PrintConfig.ID], 
            T.printEdition AS [T_F_PrintConfig.printEdition], 
            T.printXml AS [T_F_PrintConfig.printXml], 
            T.printName AS [T_F_PrintConfig.printName], 
            True AS _from0
        FROM EFLocalTest.T_F_PrintConfig AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_PrintConfig
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_PrintConfig", @"
    SELECT VALUE -- Constructing T_F_PrintConfig
        [EF5TestModel.T_F_PrintConfig](T1.[T_F_PrintConfig.ID], T1.[T_F_PrintConfig.printEdition], T1.[T_F_PrintConfig.printXml], T1.[T_F_PrintConfig.printName])
    FROM (
        SELECT 
            T.ID AS [T_F_PrintConfig.ID], 
            T.printEdition AS [T_F_PrintConfig.printEdition], 
            T.printXml AS [T_F_PrintConfig.printXml], 
            T.printName AS [T_F_PrintConfig.printName], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_PrintConfig AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ProcedureGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ProcedureGroup", @"
    SELECT VALUE -- Constructing T_F_ProcedureGroup
        [EF5TestModel.Store.T_F_ProcedureGroup](T1.[T_F_ProcedureGroup.ID], T1.[T_F_ProcedureGroup.GroupName], T1.[T_F_ProcedureGroup.Description], T1.[T_F_ProcedureGroup.FID], T1.[T_F_ProcedureGroup.LevelNum], T1.[T_F_ProcedureGroup.IndexNum])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureGroup.ID], 
            T.GroupName AS [T_F_ProcedureGroup.GroupName], 
            T.Description AS [T_F_ProcedureGroup.Description], 
            T.FID AS [T_F_ProcedureGroup.FID], 
            T.LevelNum AS [T_F_ProcedureGroup.LevelNum], 
            T.IndexNum AS [T_F_ProcedureGroup.IndexNum], 
            True AS _from0
        FROM EFLocalTest.T_F_ProcedureGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ProcedureGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ProcedureGroup", @"
    SELECT VALUE -- Constructing T_F_ProcedureGroup
        [EF5TestModel.T_F_ProcedureGroup](T1.[T_F_ProcedureGroup.ID], T1.[T_F_ProcedureGroup.GroupName], T1.[T_F_ProcedureGroup.Description], T1.[T_F_ProcedureGroup.FID], T1.[T_F_ProcedureGroup.LevelNum], T1.[T_F_ProcedureGroup.IndexNum])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureGroup.ID], 
            T.GroupName AS [T_F_ProcedureGroup.GroupName], 
            T.Description AS [T_F_ProcedureGroup.Description], 
            T.FID AS [T_F_ProcedureGroup.FID], 
            T.LevelNum AS [T_F_ProcedureGroup.LevelNum], 
            T.IndexNum AS [T_F_ProcedureGroup.IndexNum], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ProcedureGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ProcedureInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ProcedureInfo", @"
    SELECT VALUE -- Constructing T_F_ProcedureInfo
        [EF5TestModel.Store.T_F_ProcedureInfo](T1.[T_F_ProcedureInfo.ID], T1.[T_F_ProcedureInfo.ProcedureName], T1.[T_F_ProcedureInfo.Status], T1.[T_F_ProcedureInfo.PScript])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureInfo.ID], 
            T.ProcedureName AS [T_F_ProcedureInfo.ProcedureName], 
            T.Status AS [T_F_ProcedureInfo.Status], 
            T.PScript AS [T_F_ProcedureInfo.PScript], 
            True AS _from0
        FROM EFLocalTest.T_F_ProcedureInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ProcedureInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ProcedureInfo", @"
    SELECT VALUE -- Constructing T_F_ProcedureInfo
        [EF5TestModel.T_F_ProcedureInfo](T1.[T_F_ProcedureInfo.ID], T1.[T_F_ProcedureInfo.ProcedureName], T1.[T_F_ProcedureInfo.Status], T1.[T_F_ProcedureInfo.PScript])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureInfo.ID], 
            T.ProcedureName AS [T_F_ProcedureInfo.ProcedureName], 
            T.Status AS [T_F_ProcedureInfo.Status], 
            T.PScript AS [T_F_ProcedureInfo.PScript], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ProcedureInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ProcedureParamInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ProcedureParamInfo", @"
    SELECT VALUE -- Constructing T_F_ProcedureParamInfo
        [EF5TestModel.Store.T_F_ProcedureParamInfo](T1.[T_F_ProcedureParamInfo.ID], T1.[T_F_ProcedureParamInfo.ProcedureID], T1.[T_F_ProcedureParamInfo.Name], T1.[T_F_ProcedureParamInfo.Type], T1.[T_F_ProcedureParamInfo.IsOut])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureParamInfo.ID], 
            T.ProcedureID AS [T_F_ProcedureParamInfo.ProcedureID], 
            T.Name AS [T_F_ProcedureParamInfo.Name], 
            T.Type AS [T_F_ProcedureParamInfo.Type], 
            T.IsOut AS [T_F_ProcedureParamInfo.IsOut], 
            True AS _from0
        FROM EFLocalTest.T_F_ProcedureParamInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ProcedureParamInfo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ProcedureParamInfo", @"
    SELECT VALUE -- Constructing T_F_ProcedureParamInfo
        [EF5TestModel.T_F_ProcedureParamInfo](T1.[T_F_ProcedureParamInfo.ID], T1.[T_F_ProcedureParamInfo.ProcedureID], T1.[T_F_ProcedureParamInfo.Name], T1.[T_F_ProcedureParamInfo.Type], T1.[T_F_ProcedureParamInfo.IsOut])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureParamInfo.ID], 
            T.ProcedureID AS [T_F_ProcedureParamInfo.ProcedureID], 
            T.Name AS [T_F_ProcedureParamInfo.Name], 
            T.Type AS [T_F_ProcedureParamInfo.Type], 
            T.IsOut AS [T_F_ProcedureParamInfo.IsOut], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ProcedureParamInfo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ProcedureReference
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ProcedureReference", @"
    SELECT VALUE -- Constructing T_F_ProcedureReference
        [EF5TestModel.Store.T_F_ProcedureReference](T1.[T_F_ProcedureReference.ID], T1.[T_F_ProcedureReference.GroupID], T1.[T_F_ProcedureReference.ProcedureID], T1.[T_F_ProcedureReference.Name], T1.[T_F_ProcedureReference.Description], T1.[T_F_ProcedureReference.IndexNum])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureReference.ID], 
            T.GroupID AS [T_F_ProcedureReference.GroupID], 
            T.ProcedureID AS [T_F_ProcedureReference.ProcedureID], 
            T.Name AS [T_F_ProcedureReference.Name], 
            T.Description AS [T_F_ProcedureReference.Description], 
            T.IndexNum AS [T_F_ProcedureReference.IndexNum], 
            True AS _from0
        FROM EFLocalTest.T_F_ProcedureReference AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ProcedureReference
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ProcedureReference", @"
    SELECT VALUE -- Constructing T_F_ProcedureReference
        [EF5TestModel.T_F_ProcedureReference](T1.[T_F_ProcedureReference.ID], T1.[T_F_ProcedureReference.GroupID], T1.[T_F_ProcedureReference.ProcedureID], T1.[T_F_ProcedureReference.Name], T1.[T_F_ProcedureReference.Description], T1.[T_F_ProcedureReference.IndexNum])
    FROM (
        SELECT 
            T.ID AS [T_F_ProcedureReference.ID], 
            T.GroupID AS [T_F_ProcedureReference.GroupID], 
            T.ProcedureID AS [T_F_ProcedureReference.ProcedureID], 
            T.Name AS [T_F_ProcedureReference.Name], 
            T.Description AS [T_F_ProcedureReference.Description], 
            T.IndexNum AS [T_F_ProcedureReference.IndexNum], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ProcedureReference AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Project", @"
    SELECT VALUE -- Constructing T_F_Project
        [EF5TestModel.Store.T_F_Project](T1.[T_F_Project.ID], T1.[T_F_Project.SolutionID], T1.[T_F_Project.Name], T1.[T_F_Project.Type], T1.[T_F_Project.Remark])
    FROM (
        SELECT 
            T.ID AS [T_F_Project.ID], 
            T.SolutionID AS [T_F_Project.SolutionID], 
            T.Name AS [T_F_Project.Name], 
            T.Type AS [T_F_Project.Type], 
            T.Remark AS [T_F_Project.Remark], 
            True AS _from0
        FROM EFLocalTest.T_F_Project AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Project", @"
    SELECT VALUE -- Constructing T_F_Project
        [EF5TestModel.T_F_Project](T1.[T_F_Project.ID], T1.[T_F_Project.SolutionID], T1.[T_F_Project.Name], T1.[T_F_Project.Type], T1.[T_F_Project.Remark])
    FROM (
        SELECT 
            T.ID AS [T_F_Project.ID], 
            T.SolutionID AS [T_F_Project.SolutionID], 
            T.Name AS [T_F_Project.Name], 
            T.Type AS [T_F_Project.Type], 
            T.Remark AS [T_F_Project.Remark], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Project AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ProjectType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ProjectType", @"
    SELECT VALUE -- Constructing T_F_ProjectType
        [EF5TestModel.Store.T_F_ProjectType](T1.[T_F_ProjectType.ID], T1.[T_F_ProjectType.Name], T1.[T_F_ProjectType.displayName], T1.[T_F_ProjectType.image], T1.[T_F_ProjectType.description])
    FROM (
        SELECT 
            T.ID AS [T_F_ProjectType.ID], 
            T.Name AS [T_F_ProjectType.Name], 
            T.displayName AS [T_F_ProjectType.displayName], 
            T.image AS [T_F_ProjectType.image], 
            T.description AS [T_F_ProjectType.description], 
            True AS _from0
        FROM EFLocalTest.T_F_ProjectType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ProjectType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ProjectType", @"
    SELECT VALUE -- Constructing T_F_ProjectType
        [EF5TestModel.T_F_ProjectType](T1.[T_F_ProjectType.ID], T1.[T_F_ProjectType.Name], T1.[T_F_ProjectType.displayName], T1.[T_F_ProjectType.image], T1.[T_F_ProjectType.description])
    FROM (
        SELECT 
            T.ID AS [T_F_ProjectType.ID], 
            T.Name AS [T_F_ProjectType.Name], 
            T.displayName AS [T_F_ProjectType.displayName], 
            T.image AS [T_F_ProjectType.image], 
            T.description AS [T_F_ProjectType.description], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ProjectType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_ReportQuerySchema
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_ReportQuerySchema", @"
    SELECT VALUE -- Constructing T_F_ReportQuerySchema
        [EF5TestModel.Store.T_F_ReportQuerySchema](T1.[T_F_ReportQuerySchema.ID], T1.[T_F_ReportQuerySchema.SchemaName], T1.[T_F_ReportQuerySchema.ReportID], T1.[T_F_ReportQuerySchema.Query], T1.[T_F_ReportQuerySchema.UserID])
    FROM (
        SELECT 
            T.ID AS [T_F_ReportQuerySchema.ID], 
            T.SchemaName AS [T_F_ReportQuerySchema.SchemaName], 
            T.ReportID AS [T_F_ReportQuerySchema.ReportID], 
            T.Query AS [T_F_ReportQuerySchema.Query], 
            T.UserID AS [T_F_ReportQuerySchema.UserID], 
            True AS _from0
        FROM EFLocalTest.T_F_ReportQuerySchema AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_ReportQuerySchema
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_ReportQuerySchema", @"
    SELECT VALUE -- Constructing T_F_ReportQuerySchema
        [EF5TestModel.T_F_ReportQuerySchema](T1.[T_F_ReportQuerySchema.ID], T1.[T_F_ReportQuerySchema.SchemaName], T1.[T_F_ReportQuerySchema.ReportID], T1.[T_F_ReportQuerySchema.Query], T1.[T_F_ReportQuerySchema.UserID])
    FROM (
        SELECT 
            T.ID AS [T_F_ReportQuerySchema.ID], 
            T.SchemaName AS [T_F_ReportQuerySchema.SchemaName], 
            T.ReportID AS [T_F_ReportQuerySchema.ReportID], 
            T.Query AS [T_F_ReportQuerySchema.Query], 
            T.UserID AS [T_F_ReportQuerySchema.UserID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_ReportQuerySchema AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_Solution
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_Solution", @"
    SELECT VALUE -- Constructing T_F_Solution
        [EF5TestModel.Store.T_F_Solution](T1.[T_F_Solution.ID], T1.[T_F_Solution.Name], T1.[T_F_Solution.Remark])
    FROM (
        SELECT 
            T.ID AS [T_F_Solution.ID], 
            T.Name AS [T_F_Solution.Name], 
            T.Remark AS [T_F_Solution.Remark], 
            True AS _from0
        FROM EFLocalTest.T_F_Solution AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_Solution
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_Solution", @"
    SELECT VALUE -- Constructing T_F_Solution
        [EF5TestModel.T_F_Solution](T1.[T_F_Solution.ID], T1.[T_F_Solution.Name], T1.[T_F_Solution.Remark])
    FROM (
        SELECT 
            T.ID AS [T_F_Solution.ID], 
            T.Name AS [T_F_Solution.Name], 
            T.Remark AS [T_F_Solution.Remark], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_Solution AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_TypeTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_TypeTemplate", @"
    SELECT VALUE -- Constructing T_F_TypeTemplate
        [EF5TestModel.Store.T_F_TypeTemplate](T1.[T_F_TypeTemplate.ID], T1.[T_F_TypeTemplate.Version], T1.[T_F_TypeTemplate.TemplateXml], T1.[T_F_TypeTemplate.IsPublish], T1.[T_F_TypeTemplate.TempID])
    FROM (
        SELECT 
            T.ID AS [T_F_TypeTemplate.ID], 
            T.Version AS [T_F_TypeTemplate.Version], 
            T.TemplateXml AS [T_F_TypeTemplate.TemplateXml], 
            T.IsPublish AS [T_F_TypeTemplate.IsPublish], 
            T.TempID AS [T_F_TypeTemplate.TempID], 
            True AS _from0
        FROM EFLocalTest.T_F_TypeTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EF5TestModelStoreContainer.T_F_TypeTemplateGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EF5TestModelStoreContainer.T_F_TypeTemplateGroup", @"
    SELECT VALUE -- Constructing T_F_TypeTemplateGroup
        [EF5TestModel.Store.T_F_TypeTemplateGroup](T1.[T_F_TypeTemplateGroup.ID], T1.[T_F_TypeTemplateGroup.Name], T1.[T_F_TypeTemplateGroup.FID], T1.[T_F_TypeTemplateGroup.Type], T1.[T_F_TypeTemplateGroup.Remark], T1.[T_F_TypeTemplateGroup.CreateDate], T1.[T_F_TypeTemplateGroup.IsDel], T1.[T_F_TypeTemplateGroup.LevelNum])
    FROM (
        SELECT 
            T.ID AS [T_F_TypeTemplateGroup.ID], 
            T.Name AS [T_F_TypeTemplateGroup.Name], 
            T.FID AS [T_F_TypeTemplateGroup.FID], 
            T.Type AS [T_F_TypeTemplateGroup.Type], 
            T.Remark AS [T_F_TypeTemplateGroup.Remark], 
            T.CreateDate AS [T_F_TypeTemplateGroup.CreateDate], 
            T.IsDel AS [T_F_TypeTemplateGroup.IsDel], 
            T.LevelNum AS [T_F_TypeTemplateGroup.LevelNum], 
            True AS _from0
        FROM EFLocalTest.T_F_TypeTemplateGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_TypeTemplate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_TypeTemplate", @"
    SELECT VALUE -- Constructing T_F_TypeTemplate
        [EF5TestModel.T_F_TypeTemplate](T1.[T_F_TypeTemplate.ID], T1.[T_F_TypeTemplate.Version], T1.[T_F_TypeTemplate.TemplateXml], T1.[T_F_TypeTemplate.IsPublish], T1.[T_F_TypeTemplate.TempID])
    FROM (
        SELECT 
            T.ID AS [T_F_TypeTemplate.ID], 
            T.Version AS [T_F_TypeTemplate.Version], 
            T.TemplateXml AS [T_F_TypeTemplate.TemplateXml], 
            T.IsPublish AS [T_F_TypeTemplate.IsPublish], 
            T.TempID AS [T_F_TypeTemplate.TempID], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_TypeTemplate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for EFLocalTest.T_F_TypeTemplateGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EFLocalTest.T_F_TypeTemplateGroup", @"
    SELECT VALUE -- Constructing T_F_TypeTemplateGroup
        [EF5TestModel.T_F_TypeTemplateGroup](T1.[T_F_TypeTemplateGroup.ID], T1.[T_F_TypeTemplateGroup.Name], T1.[T_F_TypeTemplateGroup.FID], T1.[T_F_TypeTemplateGroup.Type], T1.[T_F_TypeTemplateGroup.Remark], T1.[T_F_TypeTemplateGroup.CreateDate], T1.[T_F_TypeTemplateGroup.IsDel], T1.[T_F_TypeTemplateGroup.LevelNum])
    FROM (
        SELECT 
            T.ID AS [T_F_TypeTemplateGroup.ID], 
            T.Name AS [T_F_TypeTemplateGroup.Name], 
            T.FID AS [T_F_TypeTemplateGroup.FID], 
            T.Type AS [T_F_TypeTemplateGroup.Type], 
            T.Remark AS [T_F_TypeTemplateGroup.Remark], 
            T.CreateDate AS [T_F_TypeTemplateGroup.CreateDate], 
            T.IsDel AS [T_F_TypeTemplateGroup.IsDel], 
            T.LevelNum AS [T_F_TypeTemplateGroup.LevelNum], 
            True AS _from0
        FROM EF5TestModelStoreContainer.T_F_TypeTemplateGroup AS T
    ) AS T1");
        }
    }
}
